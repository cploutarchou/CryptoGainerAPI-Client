// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/binance/ticker/24hr": {
            "get": {
                "description": "Retrieve 24-hour ticker data for all trading pairs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Binance"
                ],
                "summary": "Get 24-hour ticker data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/binance.TickerData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/binance/ticker/24hr/gainers": {
            "get": {
                "description": "Retrieve the top gainers with a specified limit, filtered by ending.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Binance"
                ],
                "summary": "Get the top gainers with a specified limit, filtered by ending.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter results by ending",
                        "name": "endingFilter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/binance.TickerData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/binance/ticker/24hr/gainers/pairs": {
            "get": {
                "description": "Retrieve the top gainers with a specified limit, filtered by ending and exclusion.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Binance"
                ],
                "summary": "Get the top gainers with a specified limit, filtered by ending and exclusion.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter results by ending",
                        "name": "endingFilter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Exclude results with specific ending",
                        "name": "exclude",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/binance.TickerData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/binance/ticker/24hr/{pair}": {
            "get": {
                "description": "Retrieve ticker data for a specific trading pair.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Binance"
                ],
                "summary": "Get ticker data for a specific trading pair",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trading pair symbol (e.g., BTCUSDT)",
                        "name": "pair",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.Ticker"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "binance.TickerData": {
            "type": "object",
            "properties": {
                "askPrice": {
                    "type": "string"
                },
                "askQty": {
                    "type": "string"
                },
                "bidPrice": {
                    "type": "string"
                },
                "bidQty": {
                    "type": "string"
                },
                "closeTime": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                },
                "firstId": {
                    "type": "number"
                },
                "highPrice": {
                    "type": "string"
                },
                "lastId": {
                    "type": "number"
                },
                "lastPrice": {
                    "type": "string"
                },
                "lastQty": {
                    "type": "string"
                },
                "lowPrice": {
                    "type": "string"
                },
                "openPrice": {
                    "type": "string"
                },
                "openTime": {
                    "type": "number"
                },
                "prevClosePrice": {
                    "type": "string"
                },
                "priceChange": {
                    "type": "string"
                },
                "priceChangePercent": {
                    "type": "string"
                },
                "priceChangePercentFloat": {
                    "type": "number"
                },
                "quoteVolume": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "volume": {
                    "type": "string"
                },
                "weightedAvgPrice": {
                    "type": "string"
                }
            }
        },
        "handler.Ticker": {
            "type": "object",
            "properties": {
                "askPrice": {
                    "type": "string"
                },
                "askQty": {
                    "type": "string"
                },
                "bidPrice": {
                    "type": "string"
                },
                "bidQty": {
                    "type": "string"
                },
                "closeTime": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                },
                "firstId": {
                    "type": "number"
                },
                "highPrice": {
                    "type": "string"
                },
                "lastId": {
                    "type": "number"
                },
                "lastPrice": {
                    "type": "string"
                },
                "lastQty": {
                    "type": "string"
                },
                "lowPrice": {
                    "type": "string"
                },
                "openPrice": {
                    "type": "string"
                },
                "openTime": {
                    "type": "number"
                },
                "prevClosePrice": {
                    "type": "string"
                },
                "priceChange": {
                    "type": "string"
                },
                "priceChangePercent": {
                    "type": "string"
                },
                "priceChangePercentFloat": {
                    "type": "number"
                },
                "quoteVolume": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "volume": {
                    "type": "string"
                },
                "weightedAvgPrice": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
